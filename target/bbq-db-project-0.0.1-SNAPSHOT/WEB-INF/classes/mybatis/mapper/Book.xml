<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Book" >
    <resultMap id="BaseResultMap" type="Book" >
        <id column="BOOK_ID" property="bookId" jdbcType="INTEGER" />
        <result column="TITLE" property="title" jdbcType="VARCHAR" />
        <result column="AUTHOR" property="author" jdbcType="VARCHAR" />
        <result column="ISBN" property="isbn" jdbcType="VARCHAR" />
        <result column="QUANTITY" property="quantity" jdbcType="INTEGER" />
        <result column="PRICE" property="price" jdbcType="INTEGER" />
        <result column="PUBLISHER" property="publisher" jdbcType="VARCHAR" />
        <result column="PIC" property="pic" jdbcType="VARCHAR" />
        <result column="PUBLISH_TIME" property="publishTime" jdbcType="DATE" />
        <association property="user" column="USER_ID" select="User.getUserById" />
    </resultMap>

    <sql id="Base_Column_List" >
		BOOK_ID, USER_ID, TITLE, AUTHOR, ISBN, QUANTITY, PRICE, PUBLISHER, PIC, PUBLISH_TIME
	</sql>

    <insert id="insert" parameterType="Book">
		insert into Book (BOOK_ID, USER_ID, TITLE, AUTHOR,
		ISBN, QUANTITY, PRICE, PUBLISHER, PIC, PUBLISH_TIME)
		values (#{bookId,jdbcType=INTEGER},
		#{user.userId,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{author,jdbcType=VARCHAR}, 
		#{isbn,jdbcType=VARCHAR},
		#{quantity,jdbcType=INTEGER},
		#{price,jdbcType=DOUBLE},
		#{publisher,jdbcType=VARCHAR},
		#{pic,jdbcType=VARCHAR},
		#{publishTime,jdbcType=DATE})
	</insert>

    <select id="select_all" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from Book
    </select>

    <select id="getBooksByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from Book where quantity>0 limit #{start}, #{size}
    </select>

    <select id="getEffectiveBooksCount" resultType="java.lang.Integer">
        select count(*) from Book where quantity>0
    </select>

    <select id="getBookById" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from Book where book_id = #{bookId}
    </select>

    <select id="getBookByUserID" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from Book where user_id = #{userId}
    </select>

    <select id="update" parameterType="java.util.Map">
		update Book set TITLE=#{title,jdbcType=VARCHAR},AUTHOR=#{author,jdbcType=VARCHAR},ISBN=#{isbn,jdbcType=VARCHAR},
		QUANTITY=#{quantity,jdbcType=INTEGER},PRICE=#{price,jdbcType=DOUBLE},PUBLISHER=#{publisher,jdbcType=VARCHAR},
		PIC=#{pic,jdbcType=VARCHAR},PUBLISH_TIME=#{publishTime,jdbcType=DATE} where BOOK_ID=#{bookId,jdbcType=INTEGER}
	</select>

</mapper>